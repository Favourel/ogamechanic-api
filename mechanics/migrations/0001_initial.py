# Generated by Django 4.2.23 on 2025-08-03 01:23

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="TrainingSession",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                (
                    "session_type",
                    models.CharField(
                        choices=[
                            ("basic", "Basic Training"),
                            ("advanced", "Advanced Training"),
                            ("specialized", "Specialized Training"),
                            ("certification", "Certification Course"),
                            ("workshop", "Workshop"),
                        ],
                        max_length=20,
                    ),
                ),
                ("max_participants", models.PositiveIntegerField(default=20)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                ("start_time", models.TimeField()),
                ("end_time", models.TimeField()),
                ("venue", models.CharField(max_length=200)),
                ("venue_address", models.TextField()),
                ("venue_latitude", models.DecimalField(decimal_places=6, max_digits=9)),
                (
                    "venue_longitude",
                    models.DecimalField(decimal_places=6, max_digits=9),
                ),
                ("cost", models.DecimalField(decimal_places=2, max_digits=10)),
                ("is_free", models.BooleanField(default=False)),
                ("registration_deadline", models.DateTimeField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("upcoming", "Upcoming"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="upcoming",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("materials_provided", models.TextField(blank=True)),
                ("prerequisites", models.TextField(blank=True)),
                ("certificate_offered", models.BooleanField(default=False)),
                (
                    "instructor",
                    models.ForeignKey(
                        limit_choices_to={"roles__name": "mechanic"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="conducted_training_sessions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-start_date", "-start_time"],
            },
        ),
        migrations.CreateModel(
            name="RepairRequest",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("service_type", models.CharField(max_length=100)),
                ("vehicle_make", models.CharField(max_length=50)),
                ("vehicle_model", models.CharField(max_length=50)),
                ("vehicle_year", models.PositiveIntegerField()),
                ("vehicle_registration", models.CharField(blank=True, max_length=20)),
                ("problem_description", models.TextField()),
                ("symptoms", models.TextField(blank=True)),
                (
                    "estimated_cost",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("service_address", models.TextField()),
                (
                    "service_latitude",
                    models.DecimalField(decimal_places=6, max_digits=9),
                ),
                (
                    "service_longitude",
                    models.DecimalField(decimal_places=6, max_digits=9),
                ),
                ("preferred_date", models.DateField()),
                (
                    "preferred_time_slot",
                    models.CharField(
                        choices=[
                            ("morning", "Morning (8AM-12PM)"),
                            ("afternoon", "Afternoon (12PM-4PM)"),
                            ("evening", "Evening (4PM-8PM)"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("accepted", "Accepted by Mechanic"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                            ("rejected", "Rejected"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="medium",
                        max_length=10,
                    ),
                ),
                ("requested_at", models.DateTimeField(auto_now_add=True)),
                ("accepted_at", models.DateTimeField(blank=True, null=True)),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("cancelled_at", models.DateTimeField(blank=True, null=True)),
                ("notes", models.TextField(blank=True)),
                ("cancellation_reason", models.TextField(blank=True)),
                (
                    "actual_cost",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        limit_choices_to={"roles__name": "customer"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="repair_requests",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "mechanic",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to={"roles__name": "mechanic"},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_repair_requests",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-requested_at"],
            },
        ),
        migrations.CreateModel(
            name="TrainingSessionParticipant",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("registered", "Registered"),
                            ("attended", "Attended"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                            ("no_show", "No Show"),
                        ],
                        default="registered",
                        max_length=20,
                    ),
                ),
                (
                    "payment_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("paid", "Paid"),
                            ("refunded", "Refunded"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "payment_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("registered_at", models.DateTimeField(auto_now_add=True)),
                ("attended_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("certificate_issued", models.BooleanField(default=False)),
                ("certificate_issued_at", models.DateTimeField(blank=True, null=True)),
                (
                    "rating",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                ("feedback", models.TextField(blank=True)),
                (
                    "participant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="training_sessions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="participants",
                        to="mechanics.trainingsession",
                    ),
                ),
            ],
            options={
                "ordering": ["-registered_at"],
                "indexes": [
                    models.Index(
                        fields=["session"], name="mechanics_t_session_034483_idx"
                    ),
                    models.Index(
                        fields=["participant"], name="mechanics_t_partici_bb534e_idx"
                    ),
                    models.Index(
                        fields=["status"], name="mechanics_t_status_15b3b8_idx"
                    ),
                    models.Index(
                        fields=["payment_status"], name="mechanics_t_payment_8ee8bc_idx"
                    ),
                ],
                "unique_together": {("session", "participant")},
            },
        ),
        migrations.AddIndex(
            model_name="trainingsession",
            index=models.Index(
                fields=["instructor"], name="mechanics_t_instruc_602982_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="trainingsession",
            index=models.Index(fields=["status"], name="mechanics_t_status_248b58_idx"),
        ),
        migrations.AddIndex(
            model_name="trainingsession",
            index=models.Index(
                fields=["session_type"], name="mechanics_t_session_88950e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="trainingsession",
            index=models.Index(
                fields=["start_date"], name="mechanics_t_start_d_429d8b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="repairrequest",
            index=models.Index(
                fields=["customer"], name="mechanics_r_custome_f08c7f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="repairrequest",
            index=models.Index(
                fields=["mechanic"], name="mechanics_r_mechani_d617a0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="repairrequest",
            index=models.Index(fields=["status"], name="mechanics_r_status_8bdea5_idx"),
        ),
        migrations.AddIndex(
            model_name="repairrequest",
            index=models.Index(
                fields=["priority"], name="mechanics_r_priorit_0c56b5_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="repairrequest",
            index=models.Index(
                fields=["requested_at"], name="mechanics_r_request_5c4b2e_idx"
            ),
        ),
    ]
