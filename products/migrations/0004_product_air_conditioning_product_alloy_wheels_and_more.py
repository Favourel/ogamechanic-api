# Generated by Django 4.2.23 on 2025-10-02 14:48

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        ("mechanics", "0003_remove_repairrequest_symptoms"),
        ("products", "0003_followmerchant_favoriteproduct"),
    ]

    operations = [
        migrations.AddField(
            model_name="product",
            name="air_conditioning",
            field=models.BooleanField(
                default=False, help_text="Air Conditioning / Climate Control"
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="alloy_wheels",
            field=models.BooleanField(default=False, help_text="Alloy Wheels"),
        ),
        migrations.AddField(
            model_name="product",
            name="availability",
            field=models.CharField(
                choices=[
                    ("in_stock", "In stock"),
                    ("reserved", "Reserved"),
                    ("sold", "Sold"),
                ],
                default="in_stock",
                max_length=16,
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="bluetooth",
            field=models.BooleanField(default=False, help_text="Bluetooth / AUX / USB"),
        ),
        migrations.AddField(
            model_name="product",
            name="body_type",
            field=models.CharField(
                choices=[
                    ("sedan", "Sedan"),
                    ("suv", "SUV"),
                    ("hatchback", "Hatchback"),
                    ("coupe", "Coupe"),
                    ("truck", "Truck"),
                    ("van", "Van"),
                    ("convertible", "Convertible"),
                    ("wagon", "Wagon"),
                    ("other", "Other"),
                ],
                default="other",
                max_length=16,
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="condition",
            field=models.CharField(
                choices=[
                    ("new", "New"),
                    ("used", "Used"),
                    ("certified", "Certified Pre-owned"),
                    ("other", "Other"),
                ],
                default="other",
                max_length=16,
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="cruise_control",
            field=models.BooleanField(default=False, help_text="Cruise Control"),
        ),
        migrations.AddField(
            model_name="product",
            name="currency",
            field=models.CharField(
                default="NGN", help_text="Currency code, e.g., NGN, USD", max_length=8
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="delivery_option",
            field=models.CharField(
                choices=[
                    ("pickup", "Pick-up only"),
                    ("nationwide", "Nationwide delivery"),
                    ("international", "International shipping"),
                ],
                default="pickup",
                max_length=16,
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="discount",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                help_text="Discount amount, if any",
                max_digits=12,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="engine_size",
            field=models.CharField(
                blank=True, help_text="e.g., 2.0L, 150hp", max_length=32, null=True
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="exterior_color",
            field=models.CharField(
                blank=True, help_text="Exterior color", max_length=32, null=True
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="fuel_type",
            field=models.CharField(
                choices=[
                    ("petrol", "Petrol"),
                    ("diesel", "Diesel"),
                    ("electric", "Electric"),
                    ("hybrid", "Hybrid"),
                    ("lpg", "LPG"),
                    ("other", "Other"),
                ],
                default="other",
                max_length=16,
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="interior_color",
            field=models.CharField(
                blank=True, help_text="Interior color", max_length=32, null=True
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="keyless_entry",
            field=models.BooleanField(
                default=False, help_text="Keyless Entry / Push Start"
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="leather_seats",
            field=models.BooleanField(default=False, help_text="Leather Seats"),
        ),
        migrations.AddField(
            model_name="product",
            name="make",
            field=models.ForeignKey(
                blank=True,
                help_text="Car manufacturer, e.g., Toyota, Honda",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="products_by_make",
                to="mechanics.vehiclemake",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="mileage",
            field=models.PositiveIntegerField(
                blank=True, help_text="Mileage/Odometer reading", null=True
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="mileage_unit",
            field=models.CharField(
                choices=[("km", "Kilometers"), ("mi", "Miles")],
                default="km",
                max_length=2,
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="model",
            field=models.ForeignKey(
                blank=True,
                help_text="Car model, e.g., Camry, Civic",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="products_by_model",
                to="mechanics.vehiclemake",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="navigation_system",
            field=models.BooleanField(
                default=False, help_text="Navigation / Infotainment System"
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="negotiable",
            field=models.BooleanField(
                default=False, help_text="Is the price negotiable?"
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="number_of_doors",
            field=models.PositiveSmallIntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="product",
            name="number_of_seats",
            field=models.PositiveSmallIntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="product",
            name="parking_sensors",
            field=models.BooleanField(
                default=False, help_text="Parking Sensors / Reverse Camera"
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="safety_features",
            field=models.TextField(
                blank=True,
                help_text="Comma-separated list of safety features (e.g., Airbags, ABS, Traction Control, Lane Assist, Blind Spot Monitor, etc.)",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="sunroof",
            field=models.BooleanField(
                default=False, help_text="Sunroof / Panoramic Roof"
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="transmission",
            field=models.CharField(
                choices=[
                    ("automatic", "Automatic"),
                    ("manual", "Manual"),
                    ("cvt", "CVT"),
                    ("semi-automatic", "Semi-automatic"),
                    ("other", "Other"),
                ],
                default="other",
                max_length=16,
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="year",
            field=models.PositiveIntegerField(
                blank=True, help_text="Year of manufacture, e.g., 2019", null=True
            ),
        ),
        migrations.AlterField(
            model_name="product",
            name="name",
            field=models.CharField(
                help_text="Short descriptive title, e.g., '2019 Toyota Corolla LE'",
                max_length=255,
            ),
        ),
        migrations.AlterField(
            model_name="product",
            name="stock",
            field=models.PositiveIntegerField(default=1),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(fields=["make"], name="products_pr_make_id_5239ff_idx"),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(fields=["model"], name="products_pr_model_i_151d4a_idx"),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(fields=["year"], name="products_pr_year_4dc9e6_idx"),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["condition"], name="products_pr_conditi_a55578_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["body_type"], name="products_pr_body_ty_fcc19a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(fields=["price"], name="products_pr_price_9b1a5f_idx"),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["availability"], name="products_pr_availab_bcbf21_idx"
            ),
        ),
    ]
